version: '3.8'

services:
  backend:
    build: .
    container_name: startup_hub_backend
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here-change-in-production}
      - DATABASE_URL=sqlite:////app/db.sqlite3
      - ALLOWED_HOSTS=startlinker.com,www.startlinker.com,13.50.234.250,localhost
      - CORS_ALLOWED_ORIGINS=https://startlinker.com,https://www.startlinker.com,http://localhost:3000
      - SECURE_SSL_REDIRECT=False
      - SESSION_COOKIE_SECURE=True
      - CSRF_COOKIE_SECURE=True
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - EMAIL_HOST=${EMAIL_HOST:-smtp.gmail.com}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./media:/app/media
      - ./static:/app/static
      - ./db.sqlite3:/app/db.sqlite3
    ports:
      - "8000:8000"
    depends_on:
      - redis
    networks:
      - startup_network
    restart: unless-stopped

  frontend:
    build: ../frontend
    container_name: startup_hub_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - startup_network
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: startup_hub_redis
    ports:
      - "6379:6379"
    networks:
      - startup_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: startup_hub_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./media:/usr/share/nginx/html/media:ro
      - ./static:/usr/share/nginx/html/static:ro
    ports:
      - "443:443"
    depends_on:
      - backend
      - frontend
    networks:
      - startup_network
    restart: unless-stopped

networks:
  startup_network:
    driver: bridge

volumes:
  media:
  static:
  postgres_data: