# Generated by Django 4.2.23 on 2025-08-03 10:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0014_story_image_metadata'),
    ]

    operations = [
        migrations.CreateModel(
            name='CollaborationInvite',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, max_length=500)),
                ('role_description', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('permission_level', models.CharField(choices=[('view', 'Can View'), ('comment', 'Can Comment'), ('edit', 'Can Edit'), ('admin', 'Admin Access')], default='edit', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('category', models.CharField(choices=[('document', 'Document'), ('presentation', 'Presentation'), ('spreadsheet', 'Spreadsheet'), ('image', 'Image'), ('video', 'Video'), ('code', 'Code'), ('other', 'Other')], default='other', max_length=20)),
                ('file', models.FileField(upload_to='collaboration/files/%Y/%m/%d/')),
                ('file_size', models.PositiveIntegerField(default=0)),
                ('file_type', models.CharField(blank=True, max_length=50)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('is_latest', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectMeeting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('agenda', models.TextField(blank=True, max_length=2000)),
                ('scheduled_at', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=60)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='scheduled', max_length=20)),
                ('meeting_url', models.URLField(blank=True, help_text='Zoom, Meet, or other meeting link')),
                ('location', models.CharField(blank=True, help_text='Physical location or virtual platform', max_length=200)),
                ('notes', models.TextField(blank=True, max_length=5000)),
                ('action_items', models.JSONField(blank=True, default=list)),
                ('recording_url', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['scheduled_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectMilestone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('delayed', 'Delayed'), ('cancelled', 'Cancelled')], default='planned', max_length=20)),
                ('target_date', models.DateField()),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('progress_percentage', models.PositiveIntegerField(default=0, help_text='0-100%')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['target_date'],
            },
        ),
        migrations.CreateModel(
            name='ProjectTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('status', models.CharField(choices=[('todo', 'To Do'), ('in_progress', 'In Progress'), ('review', 'Under Review'), ('completed', 'Completed'), ('blocked', 'Blocked')], default='todo', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_hours', models.PositiveIntegerField(blank=True, null=True)),
                ('actual_hours', models.PositiveIntegerField(blank=True, null=True)),
                ('attachments', models.JSONField(blank=True, default=list, help_text='List of file attachments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=1000)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='startupcollection',
            name='communication_methods',
            field=models.JSONField(blank=True, default=list, help_text='Preferred communication methods (email, slack, discord, etc.)'),
        ),
        migrations.AddField(
            model_name='startupcollection',
            name='end_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='startupcollection',
            name='goals',
            field=models.TextField(blank=True, help_text='Project goals and objectives', max_length=1000),
        ),
        migrations.AddField(
            model_name='startupcollection',
            name='max_team_size',
            field=models.PositiveIntegerField(default=10, help_text='Maximum number of collaborators'),
        ),
        migrations.AddField(
            model_name='startupcollection',
            name='meeting_frequency',
            field=models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('biweekly', 'Bi-weekly'), ('monthly', 'Monthly'), ('as_needed', 'As Needed')], default='weekly', max_length=20),
        ),
        migrations.AddField(
            model_name='startupcollection',
            name='project_type',
            field=models.CharField(choices=[('collection', 'Startup Collection'), ('project', 'Collaboration Project'), ('startup', 'Startup Development'), ('research', 'Research Project'), ('hackathon', 'Hackathon Team'), ('networking', 'Networking Group'), ('mentorship', 'Mentorship Circle')], default='collection', max_length=20),
        ),
        migrations.AddField(
            model_name='startupcollection',
            name='requirements',
            field=models.TextField(blank=True, help_text='Skills and resources needed', max_length=1000),
        ),
        migrations.AddField(
            model_name='startupcollection',
            name='skills_needed',
            field=models.JSONField(blank=True, default=list, help_text='List of required skills'),
        ),
        migrations.AddField(
            model_name='startupcollection',
            name='start_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='startupcollection',
            name='status',
            field=models.CharField(choices=[('planning', 'Planning'), ('active', 'Active'), ('on_hold', 'On Hold'), ('completed', 'Completed'), ('archived', 'Archived')], default='active', max_length=20),
        ),
        migrations.AddField(
            model_name='startupcollection',
            name='timeline',
            field=models.JSONField(blank=True, default=dict, help_text='Project milestones and deadlines'),
        ),
        migrations.AddIndex(
            model_name='startupcollection',
            index=models.Index(fields=['project_type', '-updated_at'], name='users_start_project_0412b0_idx'),
        ),
        migrations.AddIndex(
            model_name='startupcollection',
            index=models.Index(fields=['status', '-updated_at'], name='users_start_status_3437f5_idx'),
        ),
        migrations.AddIndex(
            model_name='startupcollection',
            index=models.Index(fields=['start_date'], name='users_start_start_d_1f9d8e_idx'),
        ),
        migrations.AddIndex(
            model_name='startupcollection',
            index=models.Index(fields=['end_date'], name='users_start_end_dat_126983_idx'),
        ),
        migrations.AddField(
            model_name='taskcomment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='taskcomment',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='users.projecttask'),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='assigned_to',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='depends_on',
            field=models.ManyToManyField(blank=True, related_name='blocking_tasks', to='users.projecttask'),
        ),
        migrations.AddField(
            model_name='projecttask',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='users.startupcollection'),
        ),
        migrations.AddField(
            model_name='projectmilestone',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_milestones', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectmilestone',
            name='depends_on',
            field=models.ManyToManyField(blank=True, related_name='blocking_milestones', to='users.projectmilestone'),
        ),
        migrations.AddField(
            model_name='projectmilestone',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='users.startupcollection'),
        ),
        migrations.AddField(
            model_name='projectmilestone',
            name='related_tasks',
            field=models.ManyToManyField(blank=True, related_name='milestones', to='users.projecttask'),
        ),
        migrations.AddField(
            model_name='projectmeeting',
            name='attendees',
            field=models.ManyToManyField(blank=True, related_name='project_meetings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectmeeting',
            name='organizer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organized_meetings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectmeeting',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='users.startupcollection'),
        ),
        migrations.AddField(
            model_name='projectfile',
            name='previous_version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.projectfile'),
        ),
        migrations.AddField(
            model_name='projectfile',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_files', to='users.startupcollection'),
        ),
        migrations.AddField(
            model_name='projectfile',
            name='uploaded_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collaborationinvite',
            name='invitee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_invites', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collaborationinvite',
            name='inviter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invites', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collaborationinvite',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invites', to='users.startupcollection'),
        ),
        migrations.AddIndex(
            model_name='taskcomment',
            index=models.Index(fields=['task', '-created_at'], name='users_taskc_task_id_762cdd_idx'),
        ),
        migrations.AddIndex(
            model_name='projecttask',
            index=models.Index(fields=['project', 'status'], name='users_proje_project_30c1b2_idx'),
        ),
        migrations.AddIndex(
            model_name='projecttask',
            index=models.Index(fields=['assigned_to', 'status'], name='users_proje_assigne_d6e2b9_idx'),
        ),
        migrations.AddIndex(
            model_name='projecttask',
            index=models.Index(fields=['due_date'], name='users_proje_due_dat_8079cb_idx'),
        ),
        migrations.AddIndex(
            model_name='projectmilestone',
            index=models.Index(fields=['project', 'target_date'], name='users_proje_project_15ed6c_idx'),
        ),
        migrations.AddIndex(
            model_name='projectmilestone',
            index=models.Index(fields=['status', 'target_date'], name='users_proje_status_12d583_idx'),
        ),
        migrations.AddIndex(
            model_name='projectmeeting',
            index=models.Index(fields=['project', 'scheduled_at'], name='users_proje_project_7e1a44_idx'),
        ),
        migrations.AddIndex(
            model_name='projectmeeting',
            index=models.Index(fields=['organizer', 'scheduled_at'], name='users_proje_organiz_d24abc_idx'),
        ),
        migrations.AddIndex(
            model_name='projectfile',
            index=models.Index(fields=['project', '-updated_at'], name='users_proje_project_bdc6a6_idx'),
        ),
        migrations.AddIndex(
            model_name='projectfile',
            index=models.Index(fields=['category', '-updated_at'], name='users_proje_categor_ad64f7_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationinvite',
            index=models.Index(fields=['invitee', 'status'], name='users_colla_invitee_3ddf89_idx'),
        ),
        migrations.AddIndex(
            model_name='collaborationinvite',
            index=models.Index(fields=['project', 'status'], name='users_colla_project_0a4ce2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='collaborationinvite',
            unique_together={('project', 'invitee')},
        ),
    ]
