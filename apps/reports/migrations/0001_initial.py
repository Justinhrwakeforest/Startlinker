# Generated by Django 5.2.4 on 2025-08-22 10:28

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PostReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('spam', 'Spam or Unwanted Content'), ('harassment', 'Harassment or Bullying'), ('inappropriate_content', 'Inappropriate Content'), ('misinformation', 'Misinformation or False Information'), ('hate_speech', 'Hate Speech'), ('violence', 'Violence or Harmful Content'), ('nudity', 'Nudity or Sexual Content'), ('intellectual_property', 'Intellectual Property Violation'), ('privacy_violation', 'Privacy Violation'), ('scam', 'Scam or Fraud'), ('off_topic', 'Off-topic or Irrelevant'), ('duplicate', 'Duplicate Content'), ('other', 'Other')], help_text='Category of the report', max_length=50)),
                ('reason', models.TextField(help_text='Detailed explanation of the issue')),
                ('additional_context', models.TextField(blank=True, help_text='Additional context or information')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('investigating', 'Under Investigation'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed'), ('escalated', 'Escalated')], default='pending', help_text='Current status of the report', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', help_text='Priority level assigned by admin', max_length=20)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for admin use only')),
                ('action_taken', models.CharField(blank=True, help_text='Action taken by admin (e.g., post removed, user warned)', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the report was submitted')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last time the report was modified')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When the report was resolved', null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('status_change', 'Status Changed'), ('priority_change', 'Priority Changed'), ('assignment_change', 'Assignment Changed'), ('note_added', 'Note Added'), ('user_warned', 'User Warned'), ('user_suspended', 'User Suspended'), ('user_banned', 'User Banned'), ('content_removed', 'Content Removed'), ('profile_restricted', 'Profile Restricted'), ('report_escalated', 'Report Escalated'), ('evidence_added', 'Evidence Added'), ('other', 'Other Action')], help_text='Type of action performed', max_length=30)),
                ('description', models.TextField(help_text='Detailed description of the action taken')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional data related to the action (old/new values, etc.)')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this action was performed')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date these statistics are for')),
                ('total_reports', models.IntegerField(default=0, help_text='Total reports created on this date')),
                ('pending_reports', models.IntegerField(default=0, help_text='Reports in pending status')),
                ('resolved_reports', models.IntegerField(default=0, help_text='Reports resolved on this date')),
                ('avg_response_time_hours', models.FloatField(blank=True, help_text='Average response time in hours', null=True)),
                ('report_type_breakdown', models.JSONField(default=dict, help_text='Count of reports by type')),
                ('priority_breakdown', models.JSONField(default=dict, help_text='Count of reports by priority')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='UserBan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ban_type', models.CharField(choices=[('temporary', 'Temporary Ban'), ('permanent', 'Permanent Ban')], max_length=20)),
                ('reason', models.TextField(help_text='Admin reason for the ban')),
                ('duration_days', models.PositiveIntegerField(blank=True, help_text='Duration in days for temporary bans', null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('lifted_at', models.DateTimeField(blank=True, null=True)),
                ('lift_reason', models.TextField(blank=True, help_text='Reason for lifting the ban early')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('harassment', 'Harassment or Bullying'), ('spam', 'Spam or Unwanted Content'), ('inappropriate_content', 'Inappropriate Content'), ('fake_profile', 'Fake Profile'), ('impersonation', 'Impersonation'), ('intellectual_property', 'Intellectual Property Violation'), ('privacy_violation', 'Privacy Violation'), ('scam', 'Scam or Fraud'), ('hate_speech', 'Hate Speech'), ('other', 'Other')], help_text='Category of the report', max_length=50)),
                ('reason', models.TextField(help_text='Detailed explanation of the issue (minimum 10 characters)', validators=[django.core.validators.MinLengthValidator(10)])),
                ('evidence_urls', models.JSONField(blank=True, default=list, help_text='URLs to screenshots or other evidence')),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('investigating', 'Under Investigation'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed'), ('escalated', 'Escalated')], default='pending', help_text='Current status of the report', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', help_text='Priority level assigned by admin', max_length=20)),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes for admin use only')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the report was submitted')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Last time the report was modified')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When the report was resolved', null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserWarning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(help_text='Warning message sent to the user')),
                ('reason', models.TextField(help_text='Admin reason for the warning')),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
